Index: src/main/java/control/Battle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\n\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.layout.BorderPane;\r\n\r\npublic class Battle {\r\n    \r\n    //private final Scene scene;\r\n    private final BorderPane mainPane;\r\n    \r\n    public Battle(String sceneName) {\r\n        mainPane = new BorderPane();\r\n        mainPane.setId(sceneName);\r\n        //todo init scene\r\n    }\r\n    \r\n    //todo\r\n    // add static methods for getting a scene, reading scene from xml to set up variables for x/y writing of character\r\n    // background image path ect..\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/Battle.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/control/Battle.java	(date 1593464976291)
@@ -1,21 +1,22 @@
 package control;
 
+import lombok.Getter;
 
-import javafx.scene.Scene;
-import javafx.scene.layout.BorderPane;
-
+@Getter
 public class Battle {
     
-    //private final Scene scene;
-    private final BorderPane mainPane;
+    private final WalkingStage initScene;
     
-    public Battle(String sceneName) {
-        mainPane = new BorderPane();
-        mainPane.setId(sceneName);
-        //todo init scene
+    // for balancing
+    
+    private double enemyHealthMulti;
+    private double enemyDamageMulti;
+    
+    public Battle(WalkingStage initScene) {
+        System.out.println("Battle started");
+        this.initScene = initScene;
+        
     }
     
-    //todo
-    // add static methods for getting a scene, reading scene from xml to set up variables for x/y writing of character
-    // background image path ect..
+
 }
Index: src/main/java/control/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\nimport entities.Player;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.Paint;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport lombok.RequiredArgsConstructor;\r\n\r\n\r\n@RequiredArgsConstructor\r\npublic class Controller {\r\n\r\n    public static final int WIDTH = 1440;\r\n    public static final int HEIGHT = 810;\r\n    \r\n    private Font gameFont;\r\n\r\n    //private final Application app;\r\n    private final Stage primaryStage;\r\n    private Player player;\r\n    private String styleSheet;\r\n    \r\n\r\n    public void start() {\r\n        gameFont = Font.loadFont(getClass().getClassLoader().getResourceAsStream(\"immortal.ttf\"), 40);\r\n        \r\n        styleSheet = getClass().getClassLoader().getResource(\"style.css\").toExternalForm();\r\n        //Image image = new Image(getClass().getResourceAsStream(\"cherry.jpg\"));\r\n        mainMenu();\r\n        primaryStage.show();\r\n        //loadBattleStage();\r\n    }\r\n\r\n    private void mainMenu() {\r\n        VBox mainMenuPane = new VBox(50);\r\n        mainMenuPane.setId(\"main_menu\");\r\n        mainMenuPane.setAlignment(Pos.CENTER);\r\n\r\n\r\n        Button start = new Button(\"Start\");\r\n        start.setId(\"start_button\");\r\n        start.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        start.setFont(gameFont);\r\n        start.setTextFill(Color.rgb(255, 255, 255));\r\n        \r\n        \r\n        Label rules = new Label(\"Insert rules/instructions here!!\");\r\n        mainMenuPane.getChildren().addAll(start, rules);\r\n\r\n\r\n        Scene menuScene = new Scene(mainMenuPane, WIDTH, HEIGHT);\r\n        menuScene.getStylesheets().addAll(styleSheet);\r\n        primaryStage.setScene(menuScene);\r\n\r\n        start.setOnAction(actionEvent -> {\r\n            characterSelect(menuScene);\r\n        });\r\n    }\r\n\r\n    private void characterSelect(Scene scene) {\r\n        scene.getStylesheets().add(getClass().getClassLoader().getResource(\"characterSelectStyle.css\").toExternalForm());\r\n\r\n        HBox hBox = new HBox(100);\r\n\r\n        VBox warriorVBox = new VBox(20);\r\n        VBox rogueVBox = new VBox(20);\r\n        VBox mageVBox = new VBox(20);\r\n\r\n        hBox.setId(\"main_menu\");\r\n        hBox.setAlignment(Pos.CENTER);\r\n\r\n        warriorVBox.setAlignment(Pos.CENTER);\r\n        rogueVBox.setAlignment(Pos.CENTER);\r\n        mageVBox.setAlignment(Pos.CENTER);\r\n\r\n\r\n        Label warriorName = new Label(\"Warrior\");\r\n        warriorName.setId(\"warrior_name_label\");\r\n        Label rogueName = new Label(\"Rogue\");\r\n        rogueName.setId(\"rogue_name_label\");\r\n        Label mageName = new Label(\"Mage\");\r\n        mageName.setId(\"mage_name_label\");\r\n\r\n\r\n        Button warriorButton = new Button();\r\n        warriorButton.setId(\"warrior_button\");\r\n        warriorButton.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        warriorButton.setOnAction(actionEvent -> {\r\n            customizeCharacter(scene, 1, warriorName);\r\n        });\r\n\r\n        Button rogueButton = new Button(\"\");\r\n        rogueButton.setId(\"rogue_button\");\r\n        rogueButton.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        rogueButton.setOnAction(actionEvent -> {\r\n            customizeCharacter(scene, 2, rogueName);\r\n        });\r\n\r\n        Button mageButton = new Button(\"\");\r\n        mageButton.setId(\"mage_button\");\r\n        mageButton.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        mageButton.setOnAction(actionEvent -> {\r\n            customizeCharacter(scene, 3, mageName);\r\n        });\r\n\r\n        Label warriorDesc = new Label(\"Insert info about the class\");\r\n        Label rogueDesc = new Label(\"Insert info about the class\");\r\n        Label mageDesc = new Label(\"Insert info about the class\");\r\n\r\n        warriorVBox.getChildren().addAll(warriorName, warriorButton, warriorDesc);\r\n        rogueVBox.getChildren().addAll(rogueName, rogueButton, rogueDesc);\r\n        mageVBox.getChildren().addAll(mageName, mageButton, mageDesc);\r\n\r\n        hBox.getChildren().addAll(warriorVBox, rogueVBox, mageVBox);\r\n\r\n        scene.setRoot(hBox);\r\n\r\n    }\r\n\r\n    private void customizeCharacter(Scene scene, int characterNum, Label className) {\r\n        VBox vBox = new VBox(20);\r\n        vBox.setId(\"main_menu\");\r\n        vBox.setAlignment(Pos.CENTER);\r\n    \r\n        TextArea nameBox = new TextArea();\r\n        nameBox.setPrefWidth(WIDTH / 7.0);\r\n        nameBox.setMaxWidth(WIDTH / 7.0);\r\n        nameBox.setMaxHeight(20);\r\n        nameBox.setPromptText(\"Enter Name\");\r\n        \r\n        \r\n        Button beginButton = new Button(\"Begin\");\r\n        beginButton.setId(\"start_button\");\r\n        beginButton.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        beginButton.setFont(gameFont);\r\n        beginButton.setTextFill(Color.rgb(255, 255, 255));\r\n        \r\n        Button returnButton = new Button(\"Back\");\r\n        returnButton.setId(\"start_button\");\r\n        returnButton.setPrefSize(WIDTH / 8.0, HEIGHT / 8.0);\r\n        returnButton.setFont(gameFont);\r\n        returnButton.setTextFill(Color.rgb(255, 255, 255));\r\n        \r\n        Label noNameEnteredLabel = new Label(\"You must enter a name for the character\");\r\n        noNameEnteredLabel.setId(\"no_name_toast_invis\");\r\n        \r\n        returnButton.setOnAction(actionEvent -> {\r\n            characterSelect(scene);\r\n        });\r\n        \r\n        beginButton.setOnAction(actionEvent -> {\r\n            String characterName = nameBox.getText();\r\n            if ((characterName == null || characterName.equals(\"\"))) {\r\n                if (noNameEnteredLabel.getId().equals(\"no_name_toast_invis\"))\r\n                    noNameEnteredLabel.setId(\"no_name_toast\");\r\n            }\r\n            else {\r\n                new Game(primaryStage, characterNum, characterName);\r\n            }\r\n            \r\n            \r\n        });\r\n        \r\n        vBox.getChildren().addAll(className, nameBox, beginButton, returnButton, noNameEnteredLabel);\r\n        scene.setRoot(vBox);\r\n        \r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/Controller.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/control/Controller.java	(date 1593464976286)
@@ -6,7 +6,6 @@
 import javafx.scene.control.Button;
 import javafx.scene.control.Label;
 import javafx.scene.control.TextArea;
-import javafx.scene.image.Image;
 import javafx.scene.layout.*;
 import javafx.scene.paint.Color;
 import javafx.scene.paint.Paint;
@@ -30,10 +29,9 @@
     
 
     public void start() {
-        gameFont = Font.loadFont(getClass().getClassLoader().getResourceAsStream("immortal.ttf"), 40);
+        gameFont = Font.loadFont(getClass().getResourceAsStream("/immortal.ttf"), 40);
         
-        styleSheet = getClass().getClassLoader().getResource("style.css").toExternalForm();
-        //Image image = new Image(getClass().getResourceAsStream("cherry.jpg"));
+        styleSheet = getClass().getResource("/style.css").toExternalForm();
         mainMenu();
         primaryStage.show();
         //loadBattleStage();
@@ -66,7 +64,7 @@
     }
 
     private void characterSelect(Scene scene) {
-        scene.getStylesheets().add(getClass().getClassLoader().getResource("characterSelectStyle.css").toExternalForm());
+        scene.getStylesheets().add(getClass().getResource("/characterSelectStyle.css").toExternalForm());
 
         HBox hBox = new HBox(100);
 
Index: src/main/java/entities/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entities;\r\n\r\n\r\nimport items.Item;\r\nimport javafx.scene.image.Image;\r\nimport lombok.Builder;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport spells.Spell;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\n@EqualsAndHashCode(callSuper = true)\r\n@Getter\r\n@Setter\r\npublic class Enemy extends Entity {\r\n\r\n    private List<Spell> availableSpells;\r\n    private List<Item> drops;\r\n    private int level;\r\n    private final Random rand;\r\n    \r\n    private final Image model;\r\n\r\n    @Builder\r\n    public Enemy(Class entityClass, String name, int maxHealth, ArrayList<Spell> availableSpells, ArrayList<Item> drops, int level, Image model) {\r\n        super(entityClass, name, maxHealth, maxHealth, null);\r\n        this.availableSpells = Collections.unmodifiableList(availableSpells);\r\n        this.drops = Collections.unmodifiableList(drops);\r\n        this.level = level;\r\n        this.model = model;\r\n        rand = new Random();\r\n    }\r\n\r\n    public Spell castSpell() {\r\n        return availableSpells.get(rand.nextInt(availableSpells.size()));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/entities/Enemy.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/entities/Enemy.java	(date 1593464976277)
@@ -1,12 +1,14 @@
 package entities;
 
 
+import control.ArmorFileReader;
 import items.Item;
 import javafx.scene.image.Image;
 import lombok.Builder;
 import lombok.EqualsAndHashCode;
 import lombok.Getter;
 import lombok.Setter;
+import spells.AutoAttack;
 import spells.Spell;
 
 import java.util.ArrayList;
@@ -25,12 +27,30 @@
     private final Random rand;
     
     private final Image model;
+    private double xLoc, yLoc;
 
     @Builder
-    public Enemy(Class entityClass, String name, int maxHealth, ArrayList<Spell> availableSpells, ArrayList<Item> drops, int level, Image model) {
+    public Enemy(Class entityClass, String name, int maxHealth, List<Spell> availableSpells, List<Item> drops, int level, Image model) {
         super(entityClass, name, maxHealth, maxHealth, null);
         this.availableSpells = Collections.unmodifiableList(availableSpells);
-        this.drops = Collections.unmodifiableList(drops);
+        this.drops = drops;
+        this.level = level;
+        this.model = model;
+        rand = new Random();
+    }
+    public Enemy(Class entityClass, String name, int maxHealth, int level, Image model) {
+        super(entityClass, name, maxHealth, maxHealth, null);
+        this.availableSpells = new ArrayList<>();
+        Spell.DamageType damageType;
+        switch (entityClass) {
+            case MAGE: damageType = Spell.DamageType.AIR;
+            break;
+            case ROGUE:
+            case WARRIOR:
+            default: damageType = Spell.DamageType.PHYSICAL;
+        }
+        availableSpells.add(new AutoAttack(damageType, ArmorFileReader.getWeaponByName("Starting Sword")));
+        this.drops = ArmorFileReader.getArmorForLevel(level);
         this.level = level;
         this.model = model;
         rand = new Random();
@@ -40,4 +60,5 @@
         return availableSpells.get(rand.nextInt(availableSpells.size()));
     }
 
+
 }
Index: src/main/java/entities/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entities;\r\n\r\nimport control.FileUtil;\r\nimport items.*;\r\nimport javafx.scene.image.Image;\r\nimport lombok.Builder;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport resource.Resource;\r\nimport spells.Spell;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n@Getter\r\n@Setter\r\n@EqualsAndHashCode(callSuper = true)\r\n\r\npublic class Player extends Entity {\r\n\r\n    private Chest equippedChest;\r\n    private Helm equippedHelm;\r\n    private Legs equippedLegs;\r\n    private Boots equippedBoots;\r\n\r\n    private Weapon equippedWeapon;\r\n    private Weapon equippedOffHand;\r\n    \r\n    private List<Item> backPack;\r\n    private List<Spell> equippedSpells;\r\n    private List<Spell> learnedSpells;\r\n    private Resource resource;\r\n    private final Image model;\r\n\r\n    @Builder\r\n    public Player(Chest chest, Helm helm, Legs legs, Boots boots, Weapon weapon, int health, String name, Class chosenClass) {\r\n        super(chosenClass, name, health, health, null);\r\n        equippedBoots = boots;\r\n        equippedChest = chest;\r\n        equippedHelm = helm;\r\n        equippedLegs = legs;\r\n        equippedWeapon = weapon;\r\n\r\n        backPack = new ArrayList<>();\r\n        learnedSpells = new ArrayList<>();\r\n        equippedSpells = new ArrayList<>();\r\n\r\n        switch (chosenClass) {\r\n            case MAGE:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Mage/mage.png\");\r\n                resource = new Resource(Resource.Type.MANA);\r\n                break;\r\n            case ROGUE:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Rogue/rogue.png\");\r\n                resource = new Resource(Resource.Type.ENERGY);\r\n                break;\r\n            case WARRIOR:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Knight/knight.png\");\r\n                resource = new Resource(Resource.Type.RAGE);\r\n                break;\r\n            default:\r\n                model = null;\r\n                break;\r\n        }\r\n\r\n    }\r\n    public Player(Class chosenClass, String name, int health) {\r\n        super(chosenClass, name, health, health, null);\r\n    \r\n        backPack = new ArrayList<>();\r\n        learnedSpells = new ArrayList<>();\r\n        equippedSpells = new ArrayList<>();\r\n        \r\n        switch (chosenClass) {\r\n            case MAGE:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Mage/mage.png\");\r\n                resource = new Resource(Resource.Type.MANA);\r\n                break;\r\n            case ROGUE:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Rogue/rogue.png\");\r\n                resource = new Resource(Resource.Type.ENERGY);\r\n                break;\r\n            case WARRIOR:\r\n                model = FileUtil.getResourceStreamFromClass(getClass(), \"images/Knight/knight.png\");\r\n                resource = new Resource(Resource.Type.RAGE);\r\n                break;\r\n            default:\r\n                model = null;\r\n                break;\r\n        }\r\n    }\r\n    public void equipWeapon(Weapon weapon) {\r\n        switch (getEntityClass()) {\r\n            case MAGE:\r\n                if (weapon.getType() == Weapon.Type.DAGGER || weapon.getType() == Weapon.Type.SWORD) {\r\n                    System.out.println(\"Weapon was wrong type\");\r\n                    return;\r\n                }\r\n            case ROGUE:\r\n                if (weapon.getType() == Weapon.Type.STAFF || weapon.getType() == Weapon.Type.SWORD) {\r\n                    System.out.println(\"Weapon was wrong type\");\r\n                    return;\r\n                }\r\n            case WARRIOR:\r\n                if (weapon.getType() == Weapon.Type.STAFF || weapon.getType() == Weapon.Type.DAGGER) {\r\n                    System.out.println(\"Weapon was wrong type\");\r\n                    return;\r\n                }\r\n        }\r\n        if (equippedWeapon != null)\r\n            backPack.add(equippedWeapon);\r\n        equippedWeapon = weapon;\r\n    }\r\n    \r\n    public void equipArmor(Armor item) {\r\n        switch (getEntityClass()) {\r\n            case MAGE:\r\n                if (item.getType() == Armor.Type.LEATHER || item.getType() == Armor.Type.PLATE) {\r\n                    System.out.println(\"Item is wrong armor type\");\r\n                    return;\r\n                }\r\n            case ROGUE:\r\n                if (item.getType() == Armor.Type.CLOTH || item.getType() == Armor.Type.PLATE) {\r\n                    System.out.println(\"Item is wrong armor type\");\r\n                    return;\r\n                }\r\n            case WARRIOR:\r\n                if (item.getType() == Armor.Type.LEATHER || item.getType() == Armor.Type.CLOTH) {\r\n                    System.out.println(\"Item is wrong armor type\");\r\n                    return;\r\n                }\r\n        }\r\n        if (item instanceof Chest) {\r\n            if (equippedChest != null)\r\n                backPack.add(equippedChest);\r\n            equippedChest = (Chest) item;\r\n        } else if (item instanceof Helm) {\r\n            if (equippedHelm != null)\r\n                backPack.add(equippedHelm);\r\n            equippedHelm = (Helm) item;\r\n        } else if (item instanceof Legs) {\r\n            if (equippedLegs != null)\r\n                backPack.add(equippedLegs);\r\n            equippedLegs = (Legs) item;\r\n        } else if (item instanceof Boots) {\r\n            if (equippedBoots != null)\r\n                backPack.add(equippedBoots);\r\n            equippedBoots = (Boots) item;\r\n        }\r\n    }\r\n    \r\n    public List<Item> getEquippedItems() {\r\n        return List.of(equippedWeapon, equippedHelm, equippedChest, equippedLegs, equippedBoots);\r\n    }\r\n\r\n    public int getMaxResource() {\r\n        return resource.getMaxAmount();\r\n    }\r\n    public int getCurrentResource() {\r\n        return resource.getCurrentAmount();\r\n    }\r\n    \r\n    public String toString() {\r\n        return \"Name: \" + getName() +\r\n                \"\\nEquipped Gear: \" +\r\n                \"\\nChest: \" + equippedChest.getName() +\r\n                \"\\nHelm: \" + equippedHelm.getName() +\r\n                \"\\nLegs: \" + equippedLegs.getName() +\r\n                \"\\nBoots: \" + equippedBoots.getName() +\r\n                \"\\nWeapon: \" + equippedWeapon.getName() +\r\n                \"\\nSpells learned: \\n\" + learnedSpells +\r\n                \"\\n\\nBackpack items: \" + backPack;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/entities/Player.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/entities/Player.java	(date 1593464976269)
@@ -2,6 +2,7 @@
 
 import control.FileUtil;
 import items.*;
+import javafx.scene.canvas.GraphicsContext;
 import javafx.scene.image.Image;
 import lombok.Builder;
 import lombok.EqualsAndHashCode;
@@ -11,13 +12,11 @@
 import spells.Spell;
 
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.List;
 
 @Getter
 @Setter
 @EqualsAndHashCode(callSuper = true)
-
 public class Player extends Entity {
 
     private Chest equippedChest;
@@ -29,67 +28,47 @@
     private Weapon equippedOffHand;
     
     private List<Item> backPack;
-    private List<Spell> equippedSpells;
+    private Spell[] equippedSpells;
     private List<Spell> learnedSpells;
     private Resource resource;
-    private final Image model;
-
-    @Builder
-    public Player(Chest chest, Helm helm, Legs legs, Boots boots, Weapon weapon, int health, String name, Class chosenClass) {
-        super(chosenClass, name, health, health, null);
-        equippedBoots = boots;
-        equippedChest = chest;
-        equippedHelm = helm;
-        equippedLegs = legs;
-        equippedWeapon = weapon;
-
-        backPack = new ArrayList<>();
-        learnedSpells = new ArrayList<>();
-        equippedSpells = new ArrayList<>();
-
-        switch (chosenClass) {
-            case MAGE:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Mage/mage.png");
-                resource = new Resource(Resource.Type.MANA);
-                break;
-            case ROGUE:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Rogue/rogue.png");
-                resource = new Resource(Resource.Type.ENERGY);
-                break;
-            case WARRIOR:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Knight/knight.png");
-                resource = new Resource(Resource.Type.RAGE);
-                break;
-            default:
-                model = null;
-                break;
-        }
-
-    }
+    private Image model;
+    
+    private double xLoc, yLoc;
+    private boolean faceForward;
+    private int level;
+    
+    
     public Player(Class chosenClass, String name, int health) {
         super(chosenClass, name, health, health, null);
     
         backPack = new ArrayList<>();
         learnedSpells = new ArrayList<>();
-        equippedSpells = new ArrayList<>();
+        equippedSpells = new Spell[4];
+        faceForward = true;
+        level = 1;
         
         switch (chosenClass) {
             case MAGE:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Mage/mage.png");
+                model = FileUtil.getResourceStreamFromClass(getClass(), "/images/Mage/mage.png");
                 resource = new Resource(Resource.Type.MANA);
                 break;
             case ROGUE:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Rogue/rogue.png");
+                System.out.println(getClass().getName());
+                model = FileUtil.getResourceStreamFromClass(getClass(), "/images/Rogue/rogue.png");
                 resource = new Resource(Resource.Type.ENERGY);
                 break;
             case WARRIOR:
-                model = FileUtil.getResourceStreamFromClass(getClass(), "images/Knight/knight.png");
+                model = FileUtil.getResourceStreamFromClass(getClass(), "/images/Knight/knight.png");
                 resource = new Resource(Resource.Type.RAGE);
                 break;
             default:
                 model = null;
                 break;
         }
+        
+    }
+    public void swapDirections() {
+        faceForward = !faceForward;
     }
     public void equipWeapon(Weapon weapon) {
         switch (getEntityClass()) {
@@ -98,39 +77,47 @@
                     System.out.println("Weapon was wrong type");
                     return;
                 }
+                break;
             case ROGUE:
                 if (weapon.getType() == Weapon.Type.STAFF || weapon.getType() == Weapon.Type.SWORD) {
                     System.out.println("Weapon was wrong type");
                     return;
                 }
+                break;
             case WARRIOR:
                 if (weapon.getType() == Weapon.Type.STAFF || weapon.getType() == Weapon.Type.DAGGER) {
                     System.out.println("Weapon was wrong type");
                     return;
                 }
+                break;
         }
         if (equippedWeapon != null)
             backPack.add(equippedWeapon);
         equippedWeapon = weapon;
     }
-    
+    public void levelUp() {
+        level++;
+    }
     public void equipArmor(Armor item) {
         switch (getEntityClass()) {
             case MAGE:
-                if (item.getType() == Armor.Type.LEATHER || item.getType() == Armor.Type.PLATE) {
+                if (item.getType() != Armor.Type.CLOTH) {
                     System.out.println("Item is wrong armor type");
                     return;
                 }
+                break;
             case ROGUE:
-                if (item.getType() == Armor.Type.CLOTH || item.getType() == Armor.Type.PLATE) {
+                if (item.getType() != Armor.Type.LEATHER) {
                     System.out.println("Item is wrong armor type");
                     return;
                 }
+                break;
             case WARRIOR:
-                if (item.getType() == Armor.Type.LEATHER || item.getType() == Armor.Type.CLOTH) {
+                if (item.getType() != Armor.Type.PLATE) {
                     System.out.println("Item is wrong armor type");
                     return;
                 }
+                break;
         }
         if (item instanceof Chest) {
             if (equippedChest != null)
@@ -150,7 +137,10 @@
             equippedBoots = (Boots) item;
         }
     }
-    
+    public boolean reduceHealth(int amt) {
+        setCurHealth(getCurHealth() - amt);
+        return getCurHealth() > 0;
+    }
     public List<Item> getEquippedItems() {
         return List.of(equippedWeapon, equippedHelm, equippedChest, equippedLegs, equippedBoots);
     }
@@ -161,6 +151,13 @@
     public int getCurrentResource() {
         return resource.getCurrentAmount();
     }
+    public boolean getFaceDir() { return faceForward; }
+    public void moveForward() {
+        xLoc += 5;
+    }
+    public void moveForward(int amt) {
+        xLoc =+ amt;
+    }
     
     public String toString() {
         return "Name: " + getName() +
Index: src/main/java/control/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\nimport entities.Entity;\r\nimport entities.Player;\r\nimport items.Armor;\r\nimport items.Item;\r\nimport items.Weapon;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class Game {\r\n\r\n    private final Player player;\r\n    private final Map<String, Item> items;\r\n    private final Stage primaryStage;\r\n\r\n    /**\r\n     * game constructor\r\n     *\r\n     * @param classNumber number for the class choice\r\n     *                    1 - warrior\r\n     *                    2 - rogue\r\n     *                    3 - mage\r\n     * @param name        name chosen by the user\r\n     */\r\n    public Game(Stage stage, int classNumber, String name) {\r\n\r\n        primaryStage = stage;\r\n        ArmorFileReader.init();\r\n        items = ArmorFileReader.getItemMap();\r\n        player = new Player(Entity.getClassFromNumber(classNumber), name, 100);\r\n        equipStartingGear();\r\n        run();\r\n        \r\n    }\r\n    public void run() {\r\n    \r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    private void equipStartingGear() {\r\n        switch (player.getEntityClass()) {\r\n            case WARRIOR:\r\n                player.equipArmor((Armor) items.get(\"Starting Plate Chest\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Plate Helm\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Plate Legs\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Plate Boots\"));\r\n                player.equipWeapon((Weapon) items.get(\"Starting Sword\"));\r\n            break;\r\n            case ROGUE:\r\n                player.equipArmor((Armor) items.get(\"Starting Leather Chest\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Leather Helm\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Leather Legs\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Leather Boots\"));\r\n                player.equipWeapon((Weapon) items.get(\"Starting Dagger\"));\r\n            break;\r\n            case MAGE:\r\n                player.equipArmor((Armor) items.get(\"Starting Cloth Chest\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Cloth Helm\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Cloth Legs\"));\r\n                player.equipArmor((Armor) items.get(\"Starting Cloth Boots\"));\r\n                player.equipWeapon((Weapon) items.get(\"Starting Staff\"));\r\n            break;\r\n                \r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/Game.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/control/Game.java	(date 1593464976294)
@@ -1,13 +1,18 @@
 package control;
 
+import entities.Enemy;
 import entities.Entity;
 import entities.Player;
 import items.Armor;
 import items.Item;
 import items.Weapon;
-import javafx.scene.Scene;
+import javafx.animation.KeyFrame;
+import javafx.animation.Timeline;
 import javafx.stage.Stage;
+import javafx.util.Duration;
 
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 
@@ -16,7 +21,12 @@
     private final Player player;
     private final Map<String, Item> items;
     private final Stage primaryStage;
-
+    private final List<Integer> sceneRotation;
+    private int sceneNumber = 0;
+    private final String battleXMLPath = "src/main/resources/battle_stages.xml";
+    private final List<Enemy> enemyList;
+    
+    
     /**
      * game constructor
      *
@@ -32,18 +42,54 @@
         ArmorFileReader.init();
         items = ArmorFileReader.getItemMap();
         player = new Player(Entity.getClassFromNumber(classNumber), name, 100);
+        enemyList = new ArrayList<>();
+        initEnemyList();
         equipStartingGear();
+        
+        sceneRotation = new ArrayList<>();
+        
+        for (int x = 0; x < FileUtil.getNumBattleScenes(battleXMLPath); x++)
+            sceneRotation.add(x);
+        
+        Collections.shuffle(sceneRotation);
+        
+        
         run();
         
     }
     public void run() {
+        Enemy enemy = enemyList.get(0); //change eventually
+        
+        WalkingStage wStage = new WalkingStage(player, sceneRotation.get(sceneNumber), battleXMLPath);
+        primaryStage.setScene(wStage.getScene());
+        Timeline gameLoop = new Timeline();
+        gameLoop.setCycleCount(Timeline.INDEFINITE);
     
+        //final long timeStart = System.currentTimeMillis();
     
+        KeyFrame kf = new KeyFrame(
+                Duration.seconds(0.017),
+                event -> {
+                    wStage.updateDraw();
+                    if (wStage.checkForEnemy()) {
+                    
+                    }
+                }
+        );
+        gameLoop.getKeyFrames().add(kf);
+        gameLoop.play();
+        
+        if (sceneNumber == sceneRotation.size()) {
+            sceneNumber = 0;
+        }
+        else
+            sceneNumber++;
     
     
     }
     
     private void equipStartingGear() {
+        System.out.println(player.getEntityClass());
         switch (player.getEntityClass()) {
             case WARRIOR:
                 player.equipArmor((Armor) items.get("Starting Plate Chest"));
@@ -69,6 +115,20 @@
                 
         }
     }
+    private void initEnemyList() {
+        
+        //change to read enemy list in from file and randomize then sort by level
+        //maybe split into different lists or list<list<Enemy>> to keep enemy levels seperate
+        for (int x = 0; x < 1; x++) {
+            enemyList.add(new Enemy(
+                    Entity.Class.MAGE,
+                    "Test Enemy",
+                    100,
+                    1,
+                    FileUtil.getResourceStreamFromClass(getClass(), "/images/Mage/mage.png")
+            ));
+        }
+    }
 
 
 }
Index: src/main/java/resource/Resource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package resource;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\npublic class Resource {\r\n\r\n    public static final int DEFAULT_MAX_MANA = 100;\r\n    public static final int DEFAULT_MAX_ENERGY = 100;\r\n    public static final int DEFAULT_MAX_RAGE = 100;\r\n\r\n    private static final int MANA_REGEN = 10;\r\n    private static final int ENERGY_REGEN = 50;\r\n\r\n\r\n\r\n    public enum Type {\r\n        MANA,\r\n        ENERGY,\r\n        RAGE\r\n    }\r\n    int maxAmount, currentAmount;\r\n    Type type;\r\n\r\n    public Resource(Type type) {\r\n        switch (type) {\r\n            case MANA :\r\n                maxAmount = DEFAULT_MAX_MANA;\r\n                currentAmount = maxAmount;\r\n                break;\r\n            case ENERGY:\r\n                maxAmount = DEFAULT_MAX_ENERGY;\r\n                currentAmount = maxAmount;\r\n                break;\r\n            case RAGE:\r\n                maxAmount = DEFAULT_MAX_RAGE;\r\n                currentAmount = 0;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void generateResource(int amount) {\r\n        currentAmount += amount;\r\n        if (currentAmount > maxAmount)\r\n            currentAmount = maxAmount;\r\n    }\r\n    private boolean spendResource(int amount) {\r\n        if (amount > currentAmount)\r\n            return false;\r\n        currentAmount -= amount;\r\n        return true;\r\n    }\r\n    private void regenBetweenTurns() {\r\n        switch (type) {\r\n            case MANA: currentAmount += MANA_REGEN;\r\n            break;\r\n            case ENERGY: currentAmount += ENERGY_REGEN;\r\n            break;\r\n            default:\r\n            break;\r\n        }\r\n        if (currentAmount > maxAmount)\r\n            currentAmount = maxAmount;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/resource/Resource.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/resource/Resource.java	(date 1593464976263)
@@ -41,6 +41,7 @@
             default:
                 break;
         }
+        this.type = type;
     }
 
     private void generateResource(int amount) {
Index: src/main/resources/images/enemies/bosses/field/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/field/Font.txt	(date 1593464975415)
+++ src/main/resources/images/enemies/bosses/field/Font.txt	(date 1593464975415)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/resources/images/enemies/bosses/field/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/field/License.txt	(date 1593464975412)
+++ src/main/resources/images/enemies/bosses/field/License.txt	(date 1593464975412)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/resources/images/enemies/snow/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/snow/License.txt	(date 1593464975815)
+++ src/main/resources/images/enemies/snow/License.txt	(date 1593464975815)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/resources/images/enemies/bosses/swamp/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/swamp/Font.txt	(date 1593464975400)
+++ src/main/resources/images/enemies/bosses/swamp/Font.txt	(date 1593464975400)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/resources/images/enemies/bosses/desert/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/desert/Font.txt	(date 1593464975242)
+++ src/main/resources/images/enemies/bosses/desert/Font.txt	(date 1593464975242)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/resources/images/enemies/bosses/desert/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/desert/License.txt	(date 1593464975204)
+++ src/main/resources/images/enemies/bosses/desert/License.txt	(date 1593464975204)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/resources/images/enemies/snow/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/snow/Font.txt	(date 1593464975861)
+++ src/main/resources/images/enemies/snow/Font.txt	(date 1593464975861)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"88677458-2049-4ecd-9baa-bba203d18855\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/gradle.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/gradle.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/jdom.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/lib.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/lombok.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build.gradle\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build.gradle\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/control/ArmorFileReader.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/control/ArmorFileReader.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/control/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/control/Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/control/FileUtil.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/control/FileUtil.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1dstbRPQZbVpRRTi3f29y08zFha\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.344\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settingsdialog.project.gradle\" />\r\n    <property name=\"show.unlinked.gradle.project.popup\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"88677458-2049-4ecd-9baa-bba203d18855\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1593225699267</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1593225699267</updated>\r\n      <workItem from=\"1593225703447\" duration=\"314000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ .idea/workspace.xml	(date 1593464959838)
@@ -1,19 +1,33 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="BranchesTreeState">
+    <expand>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </expand>
+    <select>
+      <path>
+        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="BRANCH:master" type="e8cecc67:BranchNodeDescriptor" />
+      </path>
+    </select>
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="88677458-2049-4ecd-9baa-bba203d18855" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/jdom.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/lib.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/lombok.xml" beforeDir="false" />
+    <list default="true" id="88677458-2049-4ecd-9baa-bba203d18855" name="Default Changelist" comment="working on adding enemies">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/control/ArmorFileReader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/control/ArmorFileReader.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/control/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/control/Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/control/FileUtil.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/control/FileUtil.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,9 +40,17 @@
     </projectState>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="beta" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="1dstbRPQZbVpRRTi3f29y08zFha" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -61,4 +83,39 @@
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="2" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="1">
+          <value>
+            <State />
+          </value>
+        </entry>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="WindowStateProjectService">
+    <state x="92" y="92" width="2376" height="1216" key="com.intellij.history.integration.ui.views.DirectoryHistoryDialog" timestamp="1593464959830">
+      <screen x="0" y="0" width="2560" height="1400" />
+    </state>
+    <state x="92" y="92" width="2376" height="1216" key="com.intellij.history.integration.ui.views.DirectoryHistoryDialog/0.0.2560.1400/-3840.0.2560.1400@0.0.2560.1400" timestamp="1593464959830" />
+  </component>
 </project>
\ No newline at end of file
Index: src/main/resources/images/enemies/bosses/swamp/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/bosses/swamp/License.txt	(date 1593464975370)
+++ src/main/resources/images/enemies/bosses/swamp/License.txt	(date 1593464975370)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/resources/images/enemies/field/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/field/Font.txt	(date 1593464975626)
+++ src/main/resources/images/enemies/field/Font.txt	(date 1593464975626)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/java/entities/Entity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entities;\r\n\r\nimport javafx.scene.image.Image;\r\nimport lombok.*;\r\nimport spells.StatusEffect;\r\n\r\n@AllArgsConstructor\r\n@Getter\r\n@Setter\r\n@RequiredArgsConstructor\r\n@EqualsAndHashCode\r\npublic abstract class Entity {\r\n\r\n    public enum Class {\r\n        ROGUE,\r\n        MAGE,\r\n        WARRIOR\r\n    }\r\n\r\n    private final Class entityClass;\r\n    private final String name;\r\n    private int curHealth, maxHealth;\r\n    private StatusEffect statusEffect;\r\n    \r\n    public static Class getClassFromNumber(int i) {\r\n        switch ( i ) {\r\n            case 1 : return Class.WARRIOR;\r\n            case 2 : return Class.ROGUE;\r\n            case 3 : return Class.MAGE;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/entities/Entity.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/entities/Entity.java	(date 1593464976275)
@@ -10,11 +10,14 @@
 @RequiredArgsConstructor
 @EqualsAndHashCode
 public abstract class Entity {
+    
 
+
     public enum Class {
         ROGUE,
         MAGE,
-        WARRIOR
+        WARRIOR,
+        NONE
     }
 
     private final Class entityClass;
@@ -30,5 +33,15 @@
             default: return null;
         }
     }
+    
+    //these are here in case I need to overwrite them
+    public static int getXDrawOffset() {
+        return 21;
+    }
+    public static int getYDrawOffset() {
+        //54 from top
+        //17 from bottom
+        return 37;
+    }
 
 }
Index: src/main/resources/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#hills_battle{\r\n    -fx-background-image: url(\"images/hills.png\");\r\n    -fx-background-repeat: no-repeat;\r\n    -fx-background-size: 1440 810;\r\n    -fx-background-position: center center;\r\n}\r\n#main_menu {\r\n    -fx-background-image: url(\"images/menuBackground.png\");\r\n    -fx-background-repeat: no-repeat;\r\n    -fx-background-size: 1440 810;\r\n    -fx-background-position: center center;\r\n}\r\n\r\n#start_button {\r\n    -fx-background-image: url(\"images/start_button.png\");\r\n    -fx-background-color: transparent;\r\n    -fx-border-width: 0;\r\n    -fx-font-smoothing-type: lcd;\r\n    -fx-background-position: center;\r\n    -fx-background-size: stretch;\r\n}\r\n\r\n#start_button:hover {\r\n    -fx-background-image: url(\"images/start_button_highlight.png\");\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/style.css	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/resources/style.css	(date 1593464974987)
@@ -1,9 +1,3 @@
-#hills_battle{
-    -fx-background-image: url("images/hills.png");
-    -fx-background-repeat: no-repeat;
-    -fx-background-size: 1440 810;
-    -fx-background-position: center center;
-}
 #main_menu {
     -fx-background-image: url("images/menuBackground.png");
     -fx-background-repeat: no-repeat;
@@ -24,6 +18,67 @@
     -fx-background-image: url("images/start_button_highlight.png");
 }
 
+#darkforest {
+    -fx-background-image: url("images/battle_scenes/darkForest.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#flatnature {
+    -fx-background-image: url("images/battle_scenes/flatNature.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#lightgrass {
+    -fx-background-image: url("images/battle_scenes/grassLight.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#nightgrass {
+    -fx-background-image: url("images/battle_scenes/grassNight.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#hills {
+    -fx-background-image: url("images/battle_scenes/hills.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#mountains {
+    -fx-background-image: url("images/battle_scenes/mountains.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#rockyforest {
+    -fx-background-image: url("images/battle_scenes/rockyForest.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#snowyforest {
+    -fx-background-image: url("images/battle_scenes/snowyForest.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#sunset {
+    -fx-background-image: url("images/battle_scenes/sunset.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#dark {
+    -fx-background-image: url("images/battle_scenes/creepyDark.jpg");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+#grassmountains {
+    -fx-background-image: url("images/battle_scenes/grassMountain.jpg");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 660;
+}
+
+
+
+
+
+
 
 
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_13\" default=\"false\" project-jdk-name=\"13\" project-jdk-type=\"JavaSDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ .idea/misc.xml	(date 1593464241153)
@@ -4,5 +4,7 @@
   <component name="FrameworkDetectionExcludesConfiguration">
     <file type="web" url="file://$PROJECT_DIR$" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_13" default="false" project-jdk-name="13" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_13" default="true" project-jdk-name="13" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
 </project>
\ No newline at end of file
Index: src/main/java/spells/Spell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spells;\r\n\r\nimport lombok.Builder;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Value;\r\nimport lombok.experimental.NonFinal;\r\n\r\n@Value\r\n@EqualsAndHashCode\r\n@Builder\r\n@NonFinal\r\npublic class Spell {\r\n\r\n    enum DamageType {\r\n        PHYSICAL,\r\n        FROST,\r\n        FIRE,\r\n        SHADOW,\r\n        AIR\r\n    }\r\n\r\n    String name;\r\n    int requiredLevel;\r\n    DamageType damageType;\r\n    StatusEffect statusEffect;\r\n    double damageLow, damageHigh, setStatusChance;\r\n    int cost;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/spells/Spell.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/spells/Spell.java	(date 1593464976320)
@@ -11,7 +11,7 @@
 @NonFinal
 public class Spell {
 
-    enum DamageType {
+    public enum DamageType {
         PHYSICAL,
         FROST,
         FIRE,
@@ -25,5 +25,6 @@
     StatusEffect statusEffect;
     double damageLow, damageHigh, setStatusChance;
     int cost;
+    String styleID;
 
 }
Index: src/main/resources/images/enemies/desert/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/desert/Font.txt	(date 1593464975031)
+++ src/main/resources/images/enemies/desert/Font.txt	(date 1593464975031)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/java/ui/GameScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ui/GameScene.java	(date 1593464976260)
+++ src/main/java/ui/GameScene.java	(date 1593464976260)
@@ -0,0 +1,28 @@
+package ui;
+
+import control.Controller;
+import javafx.scene.Scene;
+import javafx.scene.layout.Pane;
+import lombok.Builder;
+import lombok.EqualsAndHashCode;
+import lombok.Getter;
+import lombok.ToString;
+
+
+@Getter
+@EqualsAndHashCode(callSuper = false)
+@ToString
+public class GameScene extends Scene {
+    
+    private final String name;
+    private final int entityDrawX;
+    private final String filePath;
+    
+    @Builder
+    public GameScene(Pane pane, String name, int entityDrawX, String filePath) {
+        super(pane, Controller.WIDTH, Controller.HEIGHT);
+        this.name = name;
+        this.filePath = filePath;
+        this.entityDrawX = entityDrawX;
+    }
+}
Index: src/main/java/spells/StatusEffect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spells;\r\n\r\n\r\nimport lombok.Value;\r\n\r\n@Value\r\npublic class StatusEffect {\r\n\r\n    public enum Type {\r\n        KNOCKDOWN,\r\n        FREEZE,\r\n        SET_FIRE,\r\n        STUN,\r\n        FEAR,\r\n        NONE\r\n    }\r\n\r\n    Type type;\r\n    int duration;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/spells/StatusEffect.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/spells/StatusEffect.java	(date 1593464976318)
@@ -18,5 +18,7 @@
     Type type;
     int duration;
 
-
+    public static StatusEffect NONE() {
+        return new StatusEffect(Type.NONE, 0);
+    }
 }
Index: src/main/java/control/ArmorFileReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\nimport items.*;\r\nimport org.jdom2.Document;\r\nimport org.jdom2.Element;\r\nimport org.jdom2.input.SAXBuilder;\r\n\r\nimport java.io.File;\r\nimport java.lang.reflect.Array;\r\nimport java.util.*;\r\n\r\npublic class ArmorFileReader {\r\n\r\n    private final static String FILE_PATH = \"src/main/resources/armor.xml\";\r\n    private static LinkedHashMap<String, Item> items;\r\n\r\n    public static void init() {\r\n    \r\n        items = new LinkedHashMap<>();\r\n        SAXBuilder builder = new SAXBuilder();\r\n        File xmlFile = new File(FILE_PATH);\r\n        \r\n        try {\r\n            Document doc = builder.build(xmlFile);\r\n            Element rootNode = doc.getRootElement();\r\n            \r\n            for (Element e : rootNode.getChildren()) {\r\n                if (e.getName().equals(\"Armor\"))\r\n                    parseArmor(e);\r\n                else if (e.getName().equals(\"Weapon\")) {\r\n                    parseWeapons(e);\r\n                }\r\n                //add added item types here for parsing\r\n                \r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n    \r\n    public static LinkedHashMap<String, Item> getItemMap() {\r\n        return items;\r\n    }\r\n    public static void printItems() {\r\n        for (Item i: items.values()) {\r\n            System.out.println(i);\r\n        }\r\n    }\r\n    private static void parseWeapons(Element node) {\r\n        \r\n        Weapon weapon = Weapon.builder()\r\n                .name(node.getChildText(\"Name\"))\r\n                .weight(Double.parseDouble(node.getChildText(\"Weight\")))\r\n                .durability(Double.parseDouble(node.getChildText(\"Durability\")))\r\n                .level(Integer.parseInt(node.getChildText(\"Level\")))\r\n                .damageLow(Double.parseDouble(node.getChildText(\"DamageLow\")))\r\n                .damageHigh(Double.parseDouble(node.getChildText(\"DamageHigh\")))\r\n                .type(Weapon.getTypeFromString(node.getChildText(\"Type\")))\r\n                .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                .stamina(Integer.parseInt(node.getChildText(\"Stamina\")))\r\n                .strength(Integer.parseInt(node.getChildText(\"Strength\")))\r\n                .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                .intellect(Integer.parseInt(node.getChildText(\"Intellect\")))\r\n                .build();\r\n        \r\n        items.put(weapon.getName(), weapon);\r\n    }\r\n    public static List<Item> getArmorForLevel(int level) {\r\n        \r\n        List<Item> temp = new ArrayList<>();\r\n        for (Item i : items.values()) {\r\n            if (i.getLevel() == level)\r\n                temp.add(i);\r\n        }\r\n        return temp;\r\n        \r\n        //this is close to working maybe?\r\n        //items.entrySet().stream().filter(x -> x.getValue().getLevel() != level).forEach(temp.add());\r\n        \r\n    }\r\n    \r\n    private static void parseArmor(Element node) {\r\n        String slotType = node.getChildText(\"Slot\");\r\n        Armor temp = null;\r\n        if (slotType.equals(\"Chest\")) {\r\n            temp = Chest.builder()\r\n                    .name(node.getChildText(\"Name\"))\r\n                    .weight(Double.parseDouble(node.getChildText(\"Weight\")))\r\n                    .durability(Double.parseDouble(node.getChildText(\"Durability\")))\r\n                    .level(Integer.parseInt(node.getChildText(\"Level\")))\r\n                    .armor(Integer.parseInt(node.getChildText(\"ArmorAmt\")))\r\n                    .type(Armor.getTypeFromString((node.getChildText(\"Type\"))))\r\n                    .stamina(Integer.parseInt(node.getChildText(\"Stamina\")))\r\n                    .strength(Integer.parseInt(node.getChildText(\"Strength\")))\r\n                    .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                    .intellect(Integer.parseInt(node.getChildText(\"Intellect\")))\r\n                    .build();\r\n        }\r\n        else if (slotType.equals(\"Helm\")) {\r\n            temp = Helm.builder()\r\n                    .name(node.getChildText(\"Name\"))\r\n                    .weight(Double.parseDouble(node.getChildText(\"Weight\")))\r\n                    .durability(Double.parseDouble(node.getChildText(\"Durability\")))\r\n                    .level(Integer.parseInt(node.getChildText(\"Level\")))\r\n                    .armor(Integer.parseInt(node.getChildText(\"ArmorAmt\")))\r\n                    .type(Armor.getTypeFromString(node.getChildText(\"Type\")))\r\n                    .stamina(Integer.parseInt(node.getChildText(\"Stamina\")))\r\n                    .strength(Integer.parseInt(node.getChildText(\"Strength\")))\r\n                    .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                    .intellect(Integer.parseInt(node.getChildText(\"Intellect\")))\r\n                    .build();\r\n        }\r\n        else if (slotType.equals(\"Legs\")) {\r\n            temp = Legs.builder()\r\n                    .name(node.getChildText(\"Name\"))\r\n                    .weight(Double.parseDouble(node.getChildText(\"Weight\")))\r\n                    .durability(Double.parseDouble(node.getChildText(\"Durability\")))\r\n                    .level(Integer.parseInt(node.getChildText(\"Level\")))\r\n                    .armor(Integer.parseInt(node.getChildText(\"ArmorAmt\")))\r\n                    .type(Armor.getTypeFromString(node.getChildText(\"Type\")))\r\n                    .stamina(Integer.parseInt(node.getChildText(\"Stamina\")))\r\n                    .strength(Integer.parseInt(node.getChildText(\"Strength\")))\r\n                    .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                    .intellect(Integer.parseInt(node.getChildText(\"Intellect\")))\r\n                    .build();\r\n        }\r\n        else if (slotType.equals(\"Boots\")) {\r\n            temp = Boots.builder()\r\n                    .name(node.getChildText(\"Name\"))\r\n                    .weight(Double.parseDouble(node.getChildText(\"Weight\")))\r\n                    .durability(Double.parseDouble(node.getChildText(\"Durability\")))\r\n                    .level(Integer.parseInt(node.getChildText(\"Level\")))\r\n                    .armor(Integer.parseInt(node.getChildText(\"ArmorAmt\")))\r\n                    .type(Armor.getTypeFromString(node.getChildText(\"Type\")))\r\n                    .stamina(Integer.parseInt(node.getChildText(\"Stamina\")))\r\n                    .strength(Integer.parseInt(node.getChildText(\"Strength\")))\r\n                    .agility(Integer.parseInt(node.getChildText(\"Agility\")))\r\n                    .intellect(Integer.parseInt(node.getChildText(\"Intellect\")))\r\n                    .build();\r\n        }\r\n        else {\r\n            System.out.println(\"SOMETHING WENT WRONG PANIC\");\r\n        }\r\n        assert temp != null;\r\n        items.put(temp.getName(), temp);\r\n            \r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/ArmorFileReader.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/control/ArmorFileReader.java	(date 1593464976284)
@@ -8,6 +8,7 @@
 import java.io.File;
 import java.lang.reflect.Array;
 import java.util.*;
+import java.util.stream.Collectors;
 
 public class ArmorFileReader {
 
@@ -48,6 +49,17 @@
             System.out.println(i);
         }
     }
+    public static Item getItemByName(String itemName) {
+        return items.get(itemName);
+    }
+    public static Weapon getWeaponByName(String itemName) {
+        Item i = items.get(itemName);
+        if (i instanceof Weapon)
+            return (Weapon) i;
+        else
+            System.out.println("Weapon name was not given");
+        return null;
+    }
     private static void parseWeapons(Element node) {
         
         Weapon weapon = Weapon.builder()
@@ -69,15 +81,10 @@
     }
     public static List<Item> getArmorForLevel(int level) {
         
-        List<Item> temp = new ArrayList<>();
-        for (Item i : items.values()) {
-            if (i.getLevel() == level)
-                temp.add(i);
-        }
-        return temp;
-        
-        //this is close to working maybe?
-        //items.entrySet().stream().filter(x -> x.getValue().getLevel() != level).forEach(temp.add());
+        return items.values()
+                .stream()
+                .filter(x -> x.getLevel() != level)
+                .collect(Collectors.toList());
         
     }
     
Index: src/main/java/animation/SpriteAnimation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/animation/SpriteAnimation.java	(date 1593464976256)
+++ src/main/java/animation/SpriteAnimation.java	(date 1593464976256)
@@ -0,0 +1,47 @@
+package animation;
+
+import javafx.animation.Interpolator;
+import javafx.animation.Transition;
+import javafx.geometry.Rectangle2D;
+import javafx.scene.image.ImageView;
+import javafx.util.Duration;
+
+public class SpriteAnimation extends Transition {
+    
+    private final ImageView imageView;
+    private final int count;
+    private final int columns;
+    private final int offsetX;
+    private final int offsetY;
+    private final int width;
+    private final int height;
+    
+    private int lastIndex;
+    
+    public SpriteAnimation(
+            ImageView imageView,
+            Duration duration,
+            int count,   int columns,
+            int offsetX, int offsetY,
+            int width,   int height) {
+        this.imageView = imageView;
+        this.count     = count;
+        this.columns   = columns;
+        this.offsetX   = offsetX;
+        this.offsetY   = offsetY;
+        this.width     = width;
+        this.height    = height;
+        setCycleDuration(duration);
+        setInterpolator(Interpolator.LINEAR);
+    }
+    
+    public void interpolate(double k) {
+        final int index = Math.min((int) Math.floor(k * count), count - 1);
+        if (index != lastIndex) {
+            final int x = (index % columns) * width  + offsetX;
+            final int y = (index / columns) * height + offsetY;
+            imageView.setViewport(new Rectangle2D(x, y, width, height));
+            lastIndex = index;
+        }
+    }
+}
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'java'\r\n    id 'application'\r\n    id 'org.openjfx.javafxplugin' version '0.0.8'\r\n    id 'org.beryx.jlink' version '2.12.0'\r\n    id \"io.freefair.lombok\" version \"5.1.0\"\r\n}\r\n\r\ngroup 'org.example'\r\nversion '1.0-SNAPSHOT'\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\n\r\ndependencies {\r\n    testCompile group: 'junit', name: 'junit', version: '4.12'\r\n    compile group: 'org.jdom', name: 'jdom2', version: '2.0.5'\r\n}\r\n\r\napply plugin: 'org.openjfx.javafxplugin'\r\n\r\njavafx {\r\n    version = '12'\r\n    modules = [ 'javafx.controls', 'javafx.fxml' ]\r\n}\r\n\r\njlink {\r\n    launcher {\r\n        name = 'Main'\r\n    }\r\n}\r\napplication {\r\n    mainClassName = 'control.Main'\r\n}\r\n\r\nsourceSets {\r\n    main {\r\n        java {\r\n            srcDirs = ['src/java']\r\n        }\r\n        resources {\r\n            srcDirs = ['src/resources']\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ build.gradle	(date 1593464974951)
@@ -34,14 +34,13 @@
 application {
     mainClassName = 'control.Main'
 }
-
 sourceSets {
     main {
         java {
-            srcDirs = ['src/java']
+            srcDirs= ["src/main/java"]
         }
         resources {
-            srcDirs = ['src/resources']
+            srcDirs= ["src/main/resources"]
         }
     }
 }
Index: src/main/resources/images/enemies/mine/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/mine/Font.txt	(date 1593464976092)
+++ src/main/resources/images/enemies/mine/Font.txt	(date 1593464976092)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/java/spells/AutoAttack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/spells/AutoAttack.java	(date 1593464976316)
+++ src/main/java/spells/AutoAttack.java	(date 1593464976316)
@@ -0,0 +1,18 @@
+package spells;
+
+import items.Weapon;
+
+public class AutoAttack extends Spell{
+    
+    /*String name;
+    int requiredLevel;
+    DamageType damageType;
+    StatusEffect statusEffect;
+    double damageLow, damageHigh, setStatusChance;
+    int cost;
+    */
+    
+    public AutoAttack(DamageType damageType, Weapon weapon){
+        super("Auto Attack", 0, damageType, StatusEffect.NONE(), weapon.getDamageLow(), weapon.getDamageHigh(), 0, 0, "");
+    }
+}
Index: src/main/resources/images/enemies/mine/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/mine/License.txt	(date 1593464976089)
+++ src/main/resources/images/enemies/mine/License.txt	(date 1593464976089)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/java/control/WalkingStage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/WalkingStage.java	(date 1593464976282)
+++ src/main/java/control/WalkingStage.java	(date 1593464976282)
@@ -0,0 +1,126 @@
+package control;
+
+
+import animation.SpriteAnimation;
+import entities.Entity;
+import entities.Player;
+import javafx.animation.KeyFrame;
+import javafx.animation.Timeline;
+import javafx.event.ActionEvent;
+import javafx.event.EventHandler;
+import javafx.scene.canvas.Canvas;
+import javafx.scene.canvas.GraphicsContext;
+import javafx.scene.input.KeyCode;
+import javafx.scene.layout.Pane;
+import javafx.scene.layout.VBox;
+import javafx.util.Duration;
+import lombok.Getter;
+import ui.GameScene;
+import ui.HUD;
+
+import java.sql.Time;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Random;
+
+@Getter
+public class WalkingStage {
+    
+    private final GameScene scene;
+    private final VBox mainPane;
+    private final Player player;
+    private final Canvas canvas;
+    private final GraphicsContext gc;
+    private final List<Integer> enemyLocations;
+    private HUD hud;
+    
+    public WalkingStage(Player player, int numScene, String xmlPath) {
+        mainPane = new VBox(0);
+        this.player = player;
+        
+        canvas = new Canvas(1440, 660);
+        gc = canvas.getGraphicsContext2D();
+        
+        scene = FileUtil.getSceneFromXML(mainPane, numScene, xmlPath);
+        assert scene != null;
+        scene.getStylesheets().add(getClass().getResource("/style.css").toExternalForm());
+        enemyLocations = new ArrayList<>();
+        initEnemyLocations();
+        run();
+        
+    }
+    public WalkingStage(WalkingStage otherStage) {
+        mainPane = otherStage.mainPane;
+        this.player = otherStage.player;
+    
+        canvas = otherStage.canvas;
+        gc = otherStage.gc;
+    
+        scene = otherStage.scene;
+        
+        assert scene != null;
+        enemyLocations = new ArrayList<>();
+        
+        hud = otherStage.hud;
+        initEnemyLocations();
+        run();
+    }
+    private void initEnemyLocations() {
+        Random rand = new Random();
+        for (int x = 0; x <= player.getLevel(); x++) {
+            enemyLocations.add(rand.nextInt(Controller.WIDTH - 100) + 50);
+        }
+        Collections.sort(enemyLocations);
+        System.out.println(enemyLocations.get(0));
+    }
+    public void run() {
+        drawScene();
+        initListeners();
+    }
+    public boolean checkForEnemy() {
+        if (enemyLocations.size() == 0)
+            return false;
+        if (player.getXLoc() == enemyLocations.get(0)) {
+            enemyLocations.remove(0);
+            return true;
+        }
+        return false;
+    }
+    private void initListeners() {
+        mainPane.setOnKeyPressed(keyListener -> {
+            if (keyListener.getCode() == KeyCode.RIGHT || keyListener.getCode() == KeyCode.D) {
+                player.moveForward();
+            }
+        });
+    }
+    public void updateDraw() {
+        gc.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());
+        gc.drawImage(
+                player.getModel(),
+                player.getXLoc(),
+                player.getYLoc()
+        );
+        hud.updateHUD();
+    }
+    private void drawScene() {
+    
+        Pane content = new Pane();
+        content.setId(scene.getName().toLowerCase());
+       
+        player.setXLoc(-Entity.getXDrawOffset());
+        player.setYLoc(canvas.getHeight() - player.getModel().getHeight());
+        
+        gc.drawImage(
+                player.getModel(),
+                player.getXLoc(),
+                player.getYLoc()
+        );
+        content.getChildren().add(canvas);
+        
+        hud = new HUD(player);
+        mainPane.getChildren().addAll(content, hud);
+        scene.setRoot(mainPane);
+    }
+    
+}
Index: src/main/java/spells/WarriorSpell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spells;\r\n\r\nimport lombok.Builder;\r\nimport lombok.EqualsAndHashCode;\r\n\r\n@EqualsAndHashCode(callSuper = true)\r\npublic class WarriorSpell extends Spell {\r\n\r\n    private final int rageGen;\r\n\r\n    @Builder(builderMethodName = \"warriorSpellBuilder\")\r\n    public WarriorSpell(String name, int requiredLevel, DamageType damageType, StatusEffect statusEffect, double damageLow, double damageHigh,\r\n                        double setStatusChance, int cost, int rageGen) {\r\n        super(name, requiredLevel, damageType, statusEffect, damageLow, damageHigh, setStatusChance, cost);\r\n        this.rageGen = rageGen;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/spells/WarriorSpell.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/spells/WarriorSpell.java	(date 1593464976317)
@@ -10,8 +10,8 @@
 
     @Builder(builderMethodName = "warriorSpellBuilder")
     public WarriorSpell(String name, int requiredLevel, DamageType damageType, StatusEffect statusEffect, double damageLow, double damageHigh,
-                        double setStatusChance, int cost, int rageGen) {
-        super(name, requiredLevel, damageType, statusEffect, damageLow, damageHigh, setStatusChance, cost);
+                        double setStatusChance, int cost, int rageGen, String styleID) {
+        super(name, requiredLevel, damageType, statusEffect, damageLow, damageHigh, setStatusChance, cost, styleID);
         this.rageGen = rageGen;
     }
 
Index: src/main/resources/images/enemies/field/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/field/License.txt	(date 1593464975590)
+++ src/main/resources/images/enemies/field/License.txt	(date 1593464975590)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/java/ui/HUD.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ui/HUD.java	(date 1593464976262)
+++ src/main/java/ui/HUD.java	(date 1593464976262)
@@ -0,0 +1,187 @@
+package ui;
+
+import control.Controller;
+import entities.Player;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.layout.HBox;
+import javafx.scene.layout.Pane;
+import javafx.scene.paint.Color;
+import javafx.scene.shape.Rectangle;
+import spells.Spell;
+
+
+public class HUD extends Pane {
+    
+    public final static double HEALTH_Y = 7.5;
+    public final static double SPELL_Y = 25;
+
+    public final static int HEALTH_X = 30;
+    public final static int MANA_X = 1320;
+    public final static int SPELL_ONE_X = 525;
+    public final static int SPELL_TWO_X = 715;
+    public final static int SPELL_THREE_X = 906;
+    public final static int AUTO_ATTACK_X = 385;
+    
+    public final static int SPELL_ICON_SIZE = 100;
+    
+    public final static int HEALTH_BAR_WIDTH = 90;
+    public final static int HEALTH_BAR_HEIGHT = 135;
+    
+    
+    private final static int HUD_HEIGHT = 150;
+    private final Player player;
+    private Rectangle health, mana;
+    private Button aaButton, spellOneButton, spellTwoButton, spellThreeButton;
+    private Label healthAmtLabel, manaAmtLabel, healthLabel, manaLabel;
+    
+    public HUD(Player player) {
+        super();
+        this.player = player;
+        setWidth(Controller.WIDTH);
+        setMaxHeight(HUD_HEIGHT);
+        getStylesheets().add(getClass().getResource("/hud_styles.css").toExternalForm());
+        setId("hud_style");
+        drawBars();
+        initLabels();
+        getChildren().addAll(health, mana, healthAmtLabel, manaAmtLabel, healthLabel, manaLabel);
+        initButtons();
+        
+    }
+    private void initLabels() {
+        healthAmtLabel = new Label(player.getMaxHealth() + "/" + player.getMaxHealth());
+        healthAmtLabel.setId("hud_label");
+        healthAmtLabel.setLayoutX(HEALTH_X + 10);
+        healthAmtLabel.setLayoutY(67);
+        
+        manaAmtLabel = new Label(player.getCurrentResource() + "/" + player.getMaxResource());
+        manaAmtLabel.setId("hud_label");
+        manaAmtLabel.setLayoutY(67);
+        manaAmtLabel.setLayoutX(MANA_X);
+        
+        healthLabel = new Label("HP");
+        switch (player.getEntityClass()) {
+            case MAGE:
+                manaLabel = new Label("Mana");
+                manaAmtLabel.setTextFill(Color.WHITE);
+            break;
+            case ROGUE:
+                manaLabel = new Label("Energy");
+                manaAmtLabel.setTextFill(Color.BLACK);
+            break;
+            case WARRIOR:
+                manaLabel = new Label("Rage");
+                manaAmtLabel.setTextFill(Color.WHITE);
+            break;
+        }
+        healthLabel.setLayoutX(HEALTH_X + health.getWidth());
+        healthLabel.setLayoutY(67);
+        
+        manaLabel.setLayoutX(MANA_X - 60);
+        manaLabel.setLayoutY(67);
+        
+        healthLabel.setId("hud_label");
+        manaLabel.setId("hud_label");
+        healthAmtLabel.setTextFill(Color.WHITE);
+        
+        healthLabel.setTextFill(Color.WHITE);
+        manaLabel.setTextFill(Color.WHITE);
+        
+    }
+    public void updateHUD() {
+        updateButtons();
+        updateHealth();
+        updateMana();
+    }
+    private void updateHealth() {
+        healthAmtLabel.setText(player.getCurHealth() + "/" + player.getMaxHealth());
+        double scale = (double) player.getCurHealth() / player.getMaxHealth();
+        health.setHeight(scale * HEALTH_BAR_HEIGHT);
+        health.setLayoutY((1.0f - scale) * HEALTH_BAR_HEIGHT);
+    }
+    private void updateMana() {
+        manaAmtLabel.setText(player.getCurrentResource() + "/" + player.getMaxResource());
+        double scale = (double) player.getCurrentResource() / player.getMaxResource();
+        mana.setHeight(scale * HEALTH_BAR_HEIGHT);
+        mana.setLayoutY((1.0f - scale) * HEALTH_BAR_HEIGHT);
+    }
+    private void initButtons() {
+        aaButton = new Button();
+        spellOneButton = new Button();
+        spellTwoButton = new Button();
+        spellThreeButton = new Button();
+        switch (player.getEntityClass()) {
+            case WARRIOR: aaButton.setId("warrior_auto");
+                break;
+            case ROGUE: aaButton.setId("rogue_auto");
+                break;
+            case MAGE: aaButton.setId("mage_auto");
+                break;
+        }
+        aaButton.setLayoutX(AUTO_ATTACK_X);
+        aaButton.setLayoutY(SPELL_Y);
+        
+        spellOneButton.setLayoutY(SPELL_Y);
+        spellTwoButton.setLayoutY(SPELL_Y);
+        spellThreeButton.setLayoutY(SPELL_Y);
+        spellOneButton.setLayoutX(SPELL_ONE_X);
+        spellTwoButton.setLayoutX(SPELL_TWO_X);
+        spellThreeButton.setLayoutX(SPELL_THREE_X);
+        
+        getChildren().add(aaButton);
+    }
+    private void drawBars() {
+        health = new Rectangle();
+        health.setFill(Color.RED);
+        health.setHeight(HEALTH_BAR_HEIGHT);
+        health.setWidth(HEALTH_BAR_WIDTH);
+        health.setX(HEALTH_X);
+        health.setY(HEALTH_Y);
+        
+        mana = new Rectangle();
+        mana.setWidth(HEALTH_BAR_WIDTH);
+        mana.setHeight(HEALTH_BAR_HEIGHT);
+        mana.setX(MANA_X);
+        mana.setY(HEALTH_Y);
+        
+        switch (player.getResource().getType()) {
+            case MANA:
+                mana.setFill(Color.BLUE);
+            break;
+            case RAGE:
+                mana.setFill(Color.RED);
+                mana.setHeight(HEALTH_BAR_HEIGHT);
+            break;
+            case ENERGY:
+                mana.setFill(Color.YELLOW);
+            break;
+        }
+    }
+    public void updateButtons() {
+        if (player.getEquippedSpells()[1] != null && !getChildren().contains(spellOneButton)) {
+            getChildren().add(spellOneButton);
+        }
+        if (player.getEquippedSpells()[2] != null && !getChildren().contains(spellTwoButton)) {
+            getChildren().add(spellTwoButton);
+        }
+        if (player.getEquippedSpells()[3] != null && !getChildren().contains(spellThreeButton)) {
+            getChildren().add(spellThreeButton);
+        }
+    }
+    public void changeSpellButtonId(int spellNum, String ID) {
+        switch (spellNum) {
+            case 1: spellOneButton.setId(ID);
+            break;
+            case 2: spellTwoButton.setId(ID);
+            break;
+            case 3: spellThreeButton.setId(ID);
+            break;
+        }
+    }
+    
+    /*todo
+    update health?
+    extend this class for battle hud to add status effect panels and enemy healthbar
+     */
+    
+}
Index: src/main/resources/images/enemies/ruin/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/ruin/Font.txt	(date 1593464975926)
+++ src/main/resources/images/enemies/ruin/Font.txt	(date 1593464975926)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
Index: src/main/resources/images/enemies/desert/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/desert/License.txt	(date 1593464975001)
+++ src/main/resources/images/enemies/desert/License.txt	(date 1593464975001)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/resources/images/enemies/ruin/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/ruin/License.txt	(date 1593464975924)
+++ src/main/resources/images/enemies/ruin/License.txt	(date 1593464975924)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: src/main/java/control/FileUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\nimport javafx.scene.image.Image;\r\n\r\npublic class FileUtil {\r\n    \r\n    public static Image getResourceStreamFromClass(final Class<?> c, final String path) {\r\n        try {\r\n            System.out.println(path);\r\n            return new Image(c.getResourceAsStream(path));\r\n        }\r\n        catch (IllegalArgumentException e) {\r\n            throw new IllegalArgumentException(path, e);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/control/FileUtil.java	(revision 4f629671b757e01eacc4b6c9a485ee584184b4fb)
+++ src/main/java/control/FileUtil.java	(date 1593464976289)
@@ -1,17 +1,68 @@
 package control;
 
 import javafx.scene.image.Image;
+import javafx.scene.layout.Pane;
+import org.jdom2.Document;
+import org.jdom2.Element;
+import org.jdom2.JDOMException;
+import org.jdom2.input.SAXBuilder;
+import ui.GameScene;
+
+import java.io.File;
+import java.io.IOException;
 
 public class FileUtil {
     
+    
     public static Image getResourceStreamFromClass(final Class<?> c, final String path) {
         try {
-            System.out.println(path);
             return new Image(c.getResourceAsStream(path));
         }
         catch (IllegalArgumentException e) {
             throw new IllegalArgumentException(path, e);
         }
     }
+    
+    public static GameScene getSceneFromXML(final Pane pane, final int sceneNumber, final String path) {
+    
+        SAXBuilder builder = new SAXBuilder();
+        File xmlFile = new File(path);
+        
+        try {
+            Document doc = builder.build(xmlFile);
+            Element rootNode = doc.getRootElement();
+            
+            Element e = rootNode.getChildren().get(sceneNumber);
+            
+            return GameScene.builder()
+                    .entityDrawX(Integer.parseInt(e.getChildText("ground_height")))
+                    .name(e.getChildText("name"))
+                    .pane(pane)
+                    .filePath(e.getChildText("file_path"))
+                    .build();
+            
+            
+        } catch (IOException | JDOMException e) {
+            System.out.println("File not Found");
+        }
+        return null;
+    }
+    
+    public static int getNumBattleScenes(final String path) {
+        SAXBuilder builder = new SAXBuilder();
+        File xmlFile = new File(path);
+    
+        try {
+            return builder.build(xmlFile)
+                    .getRootElement()
+                    .getChildren()
+                    .size();
+            
+            
+        } catch (IOException | JDOMException e) {
+            System.out.println("File not Found");
+        }
+        return 0;
+    }
 
 }
Index: src/main/resources/hud_styles.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/hud_styles.css	(date 1593464974985)
+++ src/main/resources/hud_styles.css	(date 1593464974985)
@@ -0,0 +1,43 @@
+#hud_style {
+    -fx-background-image: url("images/hud/hud_background.png");
+    -fx-pref-width: 1440;
+    -fx-pref-height: 150;
+}
+#hud_label {
+    -fx-font-family: Immortal;
+    -fx-font-size: 15;
+    -fx-fill: #ffffff;
+}
+#warrior_auto {
+    -fx-background-image: url("images/sword_100.png");
+    -fx-pref-height: 100px;
+    -fx-pref-width: 100px;
+    -fx-background-position: center center;
+    -fx-background-repeat: no-repeat;
+    -fx-background-color: transparent;
+    -fx-border-width: 0;
+    -fx-font-smoothing-type: lcd;
+}
+#rogue_auto {
+    -fx-background-image: url("images/dagger_100.png");
+    -fx-pref-height: 100px;
+    -fx-pref-width: 100px;
+    -fx-background-position: center center;
+    -fx-background-repeat: no-repeat;
+    -fx-background-color: transparent;
+    -fx-border-width: 0;
+    -fx-font-smoothing-type: lcd;
+}
+#mage_auto {
+    -fx-background-image: url("images/staff_100.png");
+    -fx-pref-height: 100px;
+    -fx-pref-width: 100px;
+    -fx-background-position: center center;
+    -fx-background-repeat: no-repeat;
+    -fx-background-color: transparent;
+    -fx-border-width: 0;
+    -fx-font-smoothing-type: lcd;
+}
+/*
+insert spell icons here
+ */
\ No newline at end of file
Index: src/main/resources/images/enemies/enemies.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/enemies.xml	(date 1593464974994)
+++ src/main/resources/images/enemies/enemies.xml	(date 1593464974994)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<Enemies>
+    <!-- Class entityClass, String name, int maxHealth, List<Spell> availableSpells, List<Item> drops, int level, Image model -->
+    <enemy>
+        <name>Snake</name>
+        <mode_path>images/enemies/desert/snake/Snake.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Deceased</name>
+        <mode_path>images/enemies/desert/deceased/Deceased.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Hyena</name>
+        <mode_path>images/enemies/desert/hyena/Hyena.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Mummy</name>
+        <mode_path>images/enemies/desert/mummmy/Mummy.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Scorpion</name>
+        <mode_path>images/enemies/desert/scorpion/Scorpio.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Vulture</name>
+        <mode_path>images/enemies/desert/vulture/Vulture.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Beetle</name>
+        <mode_path>images/enemies/field/beetle/Beetle.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Melee Goblin</name>
+        <mode_path>images/enemies/field/goblin_melee/Goblin_melee.png</mode_path>
+    </enemy>
+    <enemy>
+        <name>Melee Goblin</name>
+        <mode_path>images/enemies/field/goblin_melee/Goblin_melee.png</mode_path>
+    </enemy>
+
+
+
+</Enemies>
Index: .idea/libraries/lib.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/lib.xml	(date 1593464974972)
+++ .idea/libraries/lib.xml	(date 1593464974972)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="lib">
+    <CLASSES>
+      <root url="file://$PROJECT_DIR$/../../../../Program Files/Java/javafx-sdk-14.0.1/lib" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$/../../../../Program Files/Java/javafx-sdk-14.0.1/lib" />
+    </SOURCES>
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../Program Files/Java/javafx-sdk-14.0.1/lib" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../Program Files/Java/javafx-sdk-14.0.1/lib" recursive="false" type="SOURCES" />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1593464974975)
+++ .idea/uiDesigner.xml	(date 1593464974975)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/resources/battle_stages.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/battle_stages.xml	(date 1593464974980)
+++ src/main/resources/battle_stages.xml	(date 1593464974980)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<scenes>
+
+    <scene>
+        <name>DarkForest</name>
+        <ground_height>609</ground_height>
+        <file_path>images/battle_scenes/darkForest.png</file_path>
+    </scene>
+
+    <scene>
+        <name>FlatNature</name>
+        <ground_height>594</ground_height>
+        <file_path>images/battle_scenes/flatNature.png</file_path>
+    </scene>
+
+    <scene>
+        <name>LightGrass</name>
+        <ground_height>610</ground_height>
+        <file_path>images/battle_scenes/grassLight.png</file_path>
+    </scene>
+
+    <scene>
+        <name>NightGrass</name>
+        <ground_height>605</ground_height>
+        <file_path>images/battle_scenes/grassNight.png</file_path>
+    </scene>
+
+    <scene>
+        <name>Hills</name>
+        <ground_height>618</ground_height>
+        <file_path>images/battle_scenes/hillss.png</file_path>
+    </scene>
+
+    <scene>
+        <name>Mountains</name>
+        <ground_height>544</ground_height>
+        <file_path>images/battle_scenes/mountains.png</file_path>
+    </scene>
+
+    <scene>
+        <name>RockyForest</name>
+        <ground_height>609</ground_height>
+        <file_path>images/battle_scenes/rockyForest.png</file_path>
+    </scene>
+
+    <scene>
+        <name>SnowyForest</name>
+        <ground_height>630</ground_height>
+        <file_path>images/battle_scenes/snowForest.png</file_path>
+    </scene>
+
+    <scene>
+        <name>Sunset</name>
+        <ground_height>626</ground_height>
+        <file_path>images/battle_scenes/sunset.png</file_path>
+    </scene>
+
+    <scene>
+        <name>Dark</name>
+        <ground_height>608</ground_height>
+        <file_path>images/battle_scenes/creepyDark.png</file_path>
+    </scene>
+
+    <scene>
+        <name>GrassMountains</name>
+        <ground_height>640</ground_height>
+        <file_path>images/battle_scenes/grassMountain.png</file_path>
+    </scene>
+
+</scenes>
+
Index: .idea/libraries/lombok.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/lombok.xml	(date 1593464974965)
+++ .idea/libraries/lombok.xml	(date 1593464974965)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="lombok">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/src/main/resources/lombok.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/images/enemies/swamp/License.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/swamp/License.txt	(date 1593464975428)
+++ src/main/resources/images/enemies/swamp/License.txt	(date 1593464975428)
@@ -0,0 +1,1 @@
+https://craftpix.net/file-licenses/
\ No newline at end of file
Index: .idea/libraries/jdom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/jdom.xml	(date 1593464974969)
+++ .idea/libraries/jdom.xml	(date 1593464974969)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="jdom">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/src/main/resources/jdom.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/images/enemies/swamp/Font.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/images/enemies/swamp/Font.txt	(date 1593464975430)
+++ src/main/resources/images/enemies/swamp/Font.txt	(date 1593464975430)
@@ -0,0 +1,2 @@
+Pixellari
+https://www.dafont.com/pixellari.font
diff --git .idea/.gitignore .idea/.gitignore
new file mode 100644
